// <auto-generated />
using Farmacia.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Farmacia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Farmacia.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Farmacia.Models.Configuracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("idpermiso")
                        .HasColumnType("integer");

                    b.Property<int>("idusuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idpermiso");

                    b.HasIndex("idusuario");

                    b.ToTable("Detalle_Permisos");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Temp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("Descuento")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<int>("idproducto")
                        .HasColumnType("integer");

                    b.Property<int>("idusuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idproducto");

                    b.HasIndex("idusuario");

                    b.ToTable("Detalle_Temp");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("Descuento")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<int>("idproducto")
                        .HasColumnType("integer");

                    b.Property<int>("idventa")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idproducto");

                    b.HasIndex("idventa");

                    b.ToTable("Detalle_Ventas");
                });

            modelBuilder.Entity("Farmacia.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LaboratorioNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("Farmacia.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Farmacia.Models.Presentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Presentaciones");
                });

            modelBuilder.Entity("Farmacia.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Vencimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("casilla")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("concentracion")
                        .HasColumnType("integer");

                    b.Property<int>("idlaboratorio")
                        .HasColumnType("integer");

                    b.Property<int>("idpresentacion")
                        .HasColumnType("integer");

                    b.Property<int>("idtipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idlaboratorio");

                    b.HasIndex("idpresentacion");

                    b.HasIndex("idtipo");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Farmacia.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Farmacia.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Farmacia.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("idrol")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idrol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Farmacia.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<int>("idcliente")
                        .HasColumnType("integer");

                    b.Property<int>("idusuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idcliente");

                    b.HasIndex("idusuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Permiso", b =>
                {
                    b.HasOne("Farmacia.Models.Permiso", "Permiso")
                        .WithMany("Detalle_Permiso")
                        .HasForeignKey("idpermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Usuario", "Usuario")
                        .WithMany("Detalle_Permisos")
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Temp", b =>
                {
                    b.HasOne("Farmacia.Models.Producto", "Producto")
                        .WithMany("Detalle_Temps")
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Usuario", "Usuario")
                        .WithMany("Detalle_Temps")
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Farmacia.Models.Detalle_Venta", b =>
                {
                    b.HasOne("Farmacia.Models.Producto", "Producto")
                        .WithMany("Detalle_Ventas")
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Venta", "Venta")
                        .WithMany("Detalle_Venta")
                        .HasForeignKey("idventa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Farmacia.Models.Producto", b =>
                {
                    b.HasOne("Farmacia.Models.Laboratorio", "Laboratorio")
                        .WithMany("Productos")
                        .HasForeignKey("idlaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Presentacion", "Presentacion")
                        .WithMany("Productos")
                        .HasForeignKey("idpresentacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Tipo", "Tipo")
                        .WithMany("Productos")
                        .HasForeignKey("idtipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Presentacion");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Farmacia.Models.Usuario", b =>
                {
                    b.HasOne("Farmacia.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("idrol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Farmacia.Models.Venta", b =>
                {
                    b.HasOne("Farmacia.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Farmacia.Models.Usuario", "Usuario")
                        .WithMany("Ventas")
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Farmacia.Models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Farmacia.Models.Laboratorio", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Farmacia.Models.Permiso", b =>
                {
                    b.Navigation("Detalle_Permiso");
                });

            modelBuilder.Entity("Farmacia.Models.Presentacion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Farmacia.Models.Producto", b =>
                {
                    b.Navigation("Detalle_Temps");

                    b.Navigation("Detalle_Ventas");
                });

            modelBuilder.Entity("Farmacia.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Farmacia.Models.Tipo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Farmacia.Models.Usuario", b =>
                {
                    b.Navigation("Detalle_Permisos");

                    b.Navigation("Detalle_Temps");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Farmacia.Models.Venta", b =>
                {
                    b.Navigation("Detalle_Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
